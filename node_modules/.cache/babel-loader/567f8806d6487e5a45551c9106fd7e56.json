{"ast":null,"code":"export function quickSort(array) {\n  const animations = [];\n  let start = 0;\n  let end = array.length - 1;\n  quickSortHelper(array, start, end, animations);\n  return animations;\n}\n\nfunction quickSortHelper(array, start, end, animations) {\n  if (start >= end) {\n    return;\n  }\n\n  let pivotIdx = partition(array, start, end, animations);\n  quickSortHelper(array, start, pivotIdx - 1, animations);\n  quickSortHelper(array, pivotIdx + 1, end, animations);\n}\n\nfunction partition(array, start, end, animations) {\n  let pivotValue = array[start];\n  let lower = start + 1;\n  let run = true;\n\n  while (run) {\n    while (array[lower] <= pivotValue && lower <= end) {\n      animations.push([start, lower]);\n      animations.push([start, lower]);\n      animations.push([0, array[0]]);\n      animations.push([0, array[0]]);\n      lower += 1;\n    }\n\n    while (array[end] >= pivotValue && lower <= end) {\n      animations.push([start, end]);\n      animations.push([start, end]);\n      animations.push([0, array[0]]);\n      animations.push([0, array[0]]);\n      end -= 1;\n    }\n\n    if (end < lower) {\n      run = false;\n    } else {\n      animations.push([lower, end]);\n      animations.push([lower, end]);\n      animations.push([lower, array[end]]);\n      animations.push([end, array[lower]]);\n      let temp = array[lower];\n      array[lower] = array[end];\n      array[end] = temp;\n    }\n  }\n\n  animations.push([start, end]);\n  animations.push([start, end]);\n  animations.push([start, array[end]]);\n  animations.push([end, pivotValue]);\n  let temp = array[end];\n  array[end] = pivotValue;\n  array[start] = temp;\n  return end;\n}","map":{"version":3,"names":["quickSort","array","animations","start","end","length","quickSortHelper","pivotIdx","partition","pivotValue","lower","run","push","temp"],"sources":["/Users/pagnavath/Desktop/All/sorting/src/sortingAlgorithms/quickSort.jsx"],"sourcesContent":["export function quickSort(array) {\n    const animations = [];\n    let start = 0;\n    let end = array.length - 1;\n    quickSortHelper(array, start, end, animations);\n    return animations;\n  }\n  \n  function quickSortHelper(array, start, end, animations) {\n    if (start >= end) {\n      return;\n    }\n    let pivotIdx = partition(array, start, end, animations);\n    quickSortHelper(array, start, pivotIdx - 1, animations);\n    quickSortHelper(array, pivotIdx + 1, end, animations);\n  }\n  \n  function partition(array, start, end, animations) {\n    let pivotValue = array[start];\n    let lower = start + 1;\n    let run = true;\n    while (run) {\n      while (array[lower] <= pivotValue && lower <= end) {\n        animations.push([start, lower]);\n        animations.push([start, lower]);\n        animations.push([0, array[0]]);\n        animations.push([0, array[0]]);\n        lower += 1;\n      }\n      while (array[end] >= pivotValue && lower <= end) {\n        animations.push([start, end]);\n        animations.push([start, end]);\n        animations.push([0, array[0]]);\n        animations.push([0, array[0]]);\n        end -= 1;\n      }\n      if (end < lower) {\n        run = false;\n      } else {\n        animations.push([lower, end]);\n        animations.push([lower, end]);\n        animations.push([lower, array[end]]);\n        animations.push([end, array[lower]]);\n        let temp = array[lower];\n        array[lower] = array[end];\n        array[end] = temp;\n      }\n    }\n    animations.push([start, end]);\n    animations.push([start, end]);\n    animations.push([start, array[end]]);\n    animations.push([end, pivotValue]);\n    let temp = array[end];\n    array[end] = pivotValue;\n    array[start] = temp;\n    return end;\n  }"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;EAC7B,MAAMC,UAAU,GAAG,EAAnB;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,GAAG,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAzB;EACAC,eAAe,CAACL,KAAD,EAAQE,KAAR,EAAeC,GAAf,EAAoBF,UAApB,CAAf;EACA,OAAOA,UAAP;AACD;;AAED,SAASI,eAAT,CAAyBL,KAAzB,EAAgCE,KAAhC,EAAuCC,GAAvC,EAA4CF,UAA5C,EAAwD;EACtD,IAAIC,KAAK,IAAIC,GAAb,EAAkB;IAChB;EACD;;EACD,IAAIG,QAAQ,GAAGC,SAAS,CAACP,KAAD,EAAQE,KAAR,EAAeC,GAAf,EAAoBF,UAApB,CAAxB;EACAI,eAAe,CAACL,KAAD,EAAQE,KAAR,EAAeI,QAAQ,GAAG,CAA1B,EAA6BL,UAA7B,CAAf;EACAI,eAAe,CAACL,KAAD,EAAQM,QAAQ,GAAG,CAAnB,EAAsBH,GAAtB,EAA2BF,UAA3B,CAAf;AACD;;AAED,SAASM,SAAT,CAAmBP,KAAnB,EAA0BE,KAA1B,EAAiCC,GAAjC,EAAsCF,UAAtC,EAAkD;EAChD,IAAIO,UAAU,GAAGR,KAAK,CAACE,KAAD,CAAtB;EACA,IAAIO,KAAK,GAAGP,KAAK,GAAG,CAApB;EACA,IAAIQ,GAAG,GAAG,IAAV;;EACA,OAAOA,GAAP,EAAY;IACV,OAAOV,KAAK,CAACS,KAAD,CAAL,IAAgBD,UAAhB,IAA8BC,KAAK,IAAIN,GAA9C,EAAmD;MACjDF,UAAU,CAACU,IAAX,CAAgB,CAACT,KAAD,EAAQO,KAAR,CAAhB;MACAR,UAAU,CAACU,IAAX,CAAgB,CAACT,KAAD,EAAQO,KAAR,CAAhB;MACAR,UAAU,CAACU,IAAX,CAAgB,CAAC,CAAD,EAAIX,KAAK,CAAC,CAAD,CAAT,CAAhB;MACAC,UAAU,CAACU,IAAX,CAAgB,CAAC,CAAD,EAAIX,KAAK,CAAC,CAAD,CAAT,CAAhB;MACAS,KAAK,IAAI,CAAT;IACD;;IACD,OAAOT,KAAK,CAACG,GAAD,CAAL,IAAcK,UAAd,IAA4BC,KAAK,IAAIN,GAA5C,EAAiD;MAC/CF,UAAU,CAACU,IAAX,CAAgB,CAACT,KAAD,EAAQC,GAAR,CAAhB;MACAF,UAAU,CAACU,IAAX,CAAgB,CAACT,KAAD,EAAQC,GAAR,CAAhB;MACAF,UAAU,CAACU,IAAX,CAAgB,CAAC,CAAD,EAAIX,KAAK,CAAC,CAAD,CAAT,CAAhB;MACAC,UAAU,CAACU,IAAX,CAAgB,CAAC,CAAD,EAAIX,KAAK,CAAC,CAAD,CAAT,CAAhB;MACAG,GAAG,IAAI,CAAP;IACD;;IACD,IAAIA,GAAG,GAAGM,KAAV,EAAiB;MACfC,GAAG,GAAG,KAAN;IACD,CAFD,MAEO;MACLT,UAAU,CAACU,IAAX,CAAgB,CAACF,KAAD,EAAQN,GAAR,CAAhB;MACAF,UAAU,CAACU,IAAX,CAAgB,CAACF,KAAD,EAAQN,GAAR,CAAhB;MACAF,UAAU,CAACU,IAAX,CAAgB,CAACF,KAAD,EAAQT,KAAK,CAACG,GAAD,CAAb,CAAhB;MACAF,UAAU,CAACU,IAAX,CAAgB,CAACR,GAAD,EAAMH,KAAK,CAACS,KAAD,CAAX,CAAhB;MACA,IAAIG,IAAI,GAAGZ,KAAK,CAACS,KAAD,CAAhB;MACAT,KAAK,CAACS,KAAD,CAAL,GAAeT,KAAK,CAACG,GAAD,CAApB;MACAH,KAAK,CAACG,GAAD,CAAL,GAAaS,IAAb;IACD;EACF;;EACDX,UAAU,CAACU,IAAX,CAAgB,CAACT,KAAD,EAAQC,GAAR,CAAhB;EACAF,UAAU,CAACU,IAAX,CAAgB,CAACT,KAAD,EAAQC,GAAR,CAAhB;EACAF,UAAU,CAACU,IAAX,CAAgB,CAACT,KAAD,EAAQF,KAAK,CAACG,GAAD,CAAb,CAAhB;EACAF,UAAU,CAACU,IAAX,CAAgB,CAACR,GAAD,EAAMK,UAAN,CAAhB;EACA,IAAII,IAAI,GAAGZ,KAAK,CAACG,GAAD,CAAhB;EACAH,KAAK,CAACG,GAAD,CAAL,GAAaK,UAAb;EACAR,KAAK,CAACE,KAAD,CAAL,GAAeU,IAAf;EACA,OAAOT,GAAP;AACD"},"metadata":{},"sourceType":"module"}