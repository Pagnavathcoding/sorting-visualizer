{"ast":null,"code":"export function selectionSort(array) {\n  const animations = [];\n  const arrayHelper = array.slice();\n  selectionSortHelper(arrayHelper, animations);\n  return animations;\n}\n\nfunction selectionSortHelper(arrayHelper, animations) {\n  // for (let i = 0; i < arrayHelper.length - 1; i++) {\n  //     let smallest = arrayHelper[i];\n  //     let smallestIdx = i;\n  //     for (let j = i + 1; j < arrayHelper.length; j++) {\n  //         animations.push([smallestIdx, j]);\n  //         animations.push([smallestIdx, j]);\n  //         animations.push([0, arrayHelper[0]]);\n  //         animations.push([0, arrayHelper[0]]);\n  //         if (arrayHelper[j] < smallest) {\n  //             smallest = arrayHelper[j];\n  //             smallestIdx = j;\n  //         }\n  //     }\n  //     animations.push([i, smallestIdx]);\n  //     animations.push([i, smallestIdx]);\n  //     animations.push([i, smallest]);\n  //     animations.push([smallestIdx, arrayHelper[i]]);\n  //     swap(smallestIdx, i, arrayHelper);\n  // }\n  let startIdx = 0;\n\n  while (startIdx < arrayHelper.length - 1) {\n    let smallestIdx = startIdx;\n\n    for (let i = startIdx + 1; i < arrayHelper.length; i++) {\n      animations.push([smallestIdx, i]);\n      animations.push([smallestIdx, i]);\n      animations.push([0, arrayHelper[0]]);\n      animations.push([0, arrayHelper[0]]);\n      if (arrayHelper[smallestIdx] > arrayHelper[i]) smallestIdx = i;\n    }\n\n    animations.push([i, smallestIdx]);\n    animations.push([i, smallestIdx]);\n    animations.push([smallestIdx, arrayHelper[i]]);\n    swap(startIdx, smallestIdx, arrayHelper);\n    startIdx += 1;\n  }\n}\n\nfunction swap(i, j, arrayHelper) {\n  const temp = arrayHelper[i];\n  arrayHelper[i] = arrayHelper[j];\n  arrayHelper[j] = temp;\n}","map":{"version":3,"names":["selectionSort","array","animations","arrayHelper","slice","selectionSortHelper","startIdx","length","smallestIdx","i","push","swap","j","temp"],"sources":["/Users/pagnavath/Desktop/sorting/src/sortingAlgorithms/selectionSort.jsx"],"sourcesContent":["export function selectionSort(array) {\n    const animations = [];\n    const arrayHelper = array.slice();\n    selectionSortHelper(arrayHelper, animations);\n    return animations;\n}\nfunction selectionSortHelper(arrayHelper, animations) {\n    // for (let i = 0; i < arrayHelper.length - 1; i++) {\n    //     let smallest = arrayHelper[i];\n    //     let smallestIdx = i;\n    //     for (let j = i + 1; j < arrayHelper.length; j++) {\n    //         animations.push([smallestIdx, j]);\n    //         animations.push([smallestIdx, j]);\n    //         animations.push([0, arrayHelper[0]]);\n    //         animations.push([0, arrayHelper[0]]);\n    //         if (arrayHelper[j] < smallest) {\n    //             smallest = arrayHelper[j];\n    //             smallestIdx = j;\n    //         }\n    //     }\n    //     animations.push([i, smallestIdx]);\n    //     animations.push([i, smallestIdx]);\n    //     animations.push([i, smallest]);\n    //     animations.push([smallestIdx, arrayHelper[i]]);\n    //     swap(smallestIdx, i, arrayHelper);\n    // }\n    let startIdx = 0;\n    while (startIdx < arrayHelper.length - 1) {\n        let smallestIdx = startIdx;\n        for (let i = startIdx + 1; i < arrayHelper.length; i++) {\n            animations.push([smallestIdx, i]);\n            animations.push([smallestIdx, i]);\n            animations.push([0, arrayHelper[0]]);\n            animations.push([0, arrayHelper[0]]);\n            if (arrayHelper[smallestIdx] > arrayHelper[i]) smallestIdx = i;\n        }\n        animations.push([i, smallestIdx]);\n        animations.push([i, smallestIdx]);\n        animations.push([smallestIdx, arrayHelper[i]]);\n        swap(startIdx, smallestIdx, arrayHelper);\n        startIdx += 1;\n    }\n}\nfunction swap(i, j, arrayHelper) {\n    const temp = arrayHelper[i];\n    arrayHelper[i] = arrayHelper[j];\n    arrayHelper[j] = temp;\n}"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;EACjC,MAAMC,UAAU,GAAG,EAAnB;EACA,MAAMC,WAAW,GAAGF,KAAK,CAACG,KAAN,EAApB;EACAC,mBAAmB,CAACF,WAAD,EAAcD,UAAd,CAAnB;EACA,OAAOA,UAAP;AACH;;AACD,SAASG,mBAAT,CAA6BF,WAA7B,EAA0CD,UAA1C,EAAsD;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAII,QAAQ,GAAG,CAAf;;EACA,OAAOA,QAAQ,GAAGH,WAAW,CAACI,MAAZ,GAAqB,CAAvC,EAA0C;IACtC,IAAIC,WAAW,GAAGF,QAAlB;;IACA,KAAK,IAAIG,CAAC,GAAGH,QAAQ,GAAG,CAAxB,EAA2BG,CAAC,GAAGN,WAAW,CAACI,MAA3C,EAAmDE,CAAC,EAApD,EAAwD;MACpDP,UAAU,CAACQ,IAAX,CAAgB,CAACF,WAAD,EAAcC,CAAd,CAAhB;MACAP,UAAU,CAACQ,IAAX,CAAgB,CAACF,WAAD,EAAcC,CAAd,CAAhB;MACAP,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIP,WAAW,CAAC,CAAD,CAAf,CAAhB;MACAD,UAAU,CAACQ,IAAX,CAAgB,CAAC,CAAD,EAAIP,WAAW,CAAC,CAAD,CAAf,CAAhB;MACA,IAAIA,WAAW,CAACK,WAAD,CAAX,GAA2BL,WAAW,CAACM,CAAD,CAA1C,EAA+CD,WAAW,GAAGC,CAAd;IAClD;;IACDP,UAAU,CAACQ,IAAX,CAAgB,CAACD,CAAD,EAAID,WAAJ,CAAhB;IACAN,UAAU,CAACQ,IAAX,CAAgB,CAACD,CAAD,EAAID,WAAJ,CAAhB;IACAN,UAAU,CAACQ,IAAX,CAAgB,CAACF,WAAD,EAAcL,WAAW,CAACM,CAAD,CAAzB,CAAhB;IACAE,IAAI,CAACL,QAAD,EAAWE,WAAX,EAAwBL,WAAxB,CAAJ;IACAG,QAAQ,IAAI,CAAZ;EACH;AACJ;;AACD,SAASK,IAAT,CAAcF,CAAd,EAAiBG,CAAjB,EAAoBT,WAApB,EAAiC;EAC7B,MAAMU,IAAI,GAAGV,WAAW,CAACM,CAAD,CAAxB;EACAN,WAAW,CAACM,CAAD,CAAX,GAAiBN,WAAW,CAACS,CAAD,CAA5B;EACAT,WAAW,CAACS,CAAD,CAAX,GAAiBC,IAAjB;AACH"},"metadata":{},"sourceType":"module"}