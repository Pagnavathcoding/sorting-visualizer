{"ast":null,"code":"export function insertionSort(array) {\n  const animations = [];\n  const arrayHelper = array.slice();\n  insertionSortHelper(arrayHelper, animations);\n  array = arrayHelper;\n  return [animations, array];\n}\n\nfunction insertionSortHelper(arrayHelper, animations) {\n  // const length = arrayHelper.length;\n  // for (let i = 0; i < length - 1; i++) {\n  //     for (let j = 0; j < length - i - 1; j++) {\n  //         animations.push([j, j + 1]);\n  //         animations.push([j, j + 1]);\n  //         if (arrayHelper[j] > arrayHelper[j + 1]) {\n  //             animations.push([j, arrayHelper[j + 1]]);\n  //             animations.push([j + 1, arrayHelper[j]]);\n  //             swap(j, j + 1, arrayHelper);\n  //         } else {\n  //             animations.push([-1, -1]);\n  //             animations.push([-1, -1]);\n  //         }\n  //     }\n  // }\n  for (let i = 1; i < array.length; i++) {\n    let j = i;\n\n    while (j > 0 && array[j] < array[j - 1]) {\n      animations.push([j, arrayHelper[j - 1]]);\n      animations.push([j - 1, arrayHelper[j]]);\n      swap(j, j - 1, array);\n      j -= 1;\n    }\n  }\n\n  return array;\n}\n\nfunction swap(i, j, arrayHelper) {\n  const temp = arrayHelper[i];\n  arrayHelper[i] = arrayHelper[j];\n  arrayHelper[j] = temp;\n}","map":{"version":3,"names":["insertionSort","array","animations","arrayHelper","slice","insertionSortHelper","i","length","j","push","swap","temp"],"sources":["/Users/pagnavath/Desktop/sorting/src/sortingAlgorithms/insertionSort.jsx"],"sourcesContent":["export function insertionSort(array) {\n    const animations = [];\n    const arrayHelper = array.slice();\n    insertionSortHelper(arrayHelper, animations);\n    array = arrayHelper;\n    return [animations, array];\n}\nfunction insertionSortHelper(arrayHelper, animations) {\n    // const length = arrayHelper.length;\n    // for (let i = 0; i < length - 1; i++) {\n    //     for (let j = 0; j < length - i - 1; j++) {\n    //         animations.push([j, j + 1]);\n    //         animations.push([j, j + 1]);\n    //         if (arrayHelper[j] > arrayHelper[j + 1]) {\n    //             animations.push([j, arrayHelper[j + 1]]);\n    //             animations.push([j + 1, arrayHelper[j]]);\n    //             swap(j, j + 1, arrayHelper);\n    //         } else {\n    //             animations.push([-1, -1]);\n    //             animations.push([-1, -1]);\n    //         }\n    //     }\n    // }\n    for (let i = 1; i < array.length; i++) {\n        let j = i;\n        while (j > 0 && array[j] < array[j - 1]) {\n            animations.push([j, arrayHelper[j - 1]]);\n            animations.push([j - 1, arrayHelper[j]]);\n            swap(j, j - 1, array);\n            j -= 1;\n        }\n    }\n    return array;\n}\nfunction swap(i, j, arrayHelper) {\n    const temp = arrayHelper[i];\n    arrayHelper[i] = arrayHelper[j];\n    arrayHelper[j] = temp;\n}"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;EACjC,MAAMC,UAAU,GAAG,EAAnB;EACA,MAAMC,WAAW,GAAGF,KAAK,CAACG,KAAN,EAApB;EACAC,mBAAmB,CAACF,WAAD,EAAcD,UAAd,CAAnB;EACAD,KAAK,GAAGE,WAAR;EACA,OAAO,CAACD,UAAD,EAAaD,KAAb,CAAP;AACH;;AACD,SAASI,mBAAT,CAA6BF,WAA7B,EAA0CD,UAA1C,EAAsD;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACnC,IAAIE,CAAC,GAAGF,CAAR;;IACA,OAAOE,CAAC,GAAG,CAAJ,IAASP,KAAK,CAACO,CAAD,CAAL,GAAWP,KAAK,CAACO,CAAC,GAAG,CAAL,CAAhC,EAAyC;MACrCN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAD,EAAIL,WAAW,CAACK,CAAC,GAAG,CAAL,CAAf,CAAhB;MACAN,UAAU,CAACO,IAAX,CAAgB,CAACD,CAAC,GAAG,CAAL,EAAQL,WAAW,CAACK,CAAD,CAAnB,CAAhB;MACAE,IAAI,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,EAAWP,KAAX,CAAJ;MACAO,CAAC,IAAI,CAAL;IACH;EACJ;;EACD,OAAOP,KAAP;AACH;;AACD,SAASS,IAAT,CAAcJ,CAAd,EAAiBE,CAAjB,EAAoBL,WAApB,EAAiC;EAC7B,MAAMQ,IAAI,GAAGR,WAAW,CAACG,CAAD,CAAxB;EACAH,WAAW,CAACG,CAAD,CAAX,GAAiBH,WAAW,CAACK,CAAD,CAA5B;EACAL,WAAW,CAACK,CAAD,CAAX,GAAiBG,IAAjB;AACH"},"metadata":{},"sourceType":"module"}